  # JavaScript 기본 문법 개념 정리

### **`const` 변수**
- 한 번 지정된 값은 변경 불가능.
- **사용 사례**: 주민등록번호, 학번, 여권번호 등 **변하지 않는 값**.
- **특징**:
  1. 재선언 불가.
  2. 재할당 불가.
- 프로젝트에서는 주로 `const`를 사용하며, 함수와 객체 선언에도 자주 활용.

### **`let` 변수**
- 변경 가능한 변수로, 동적 데이터를 처리할 때 유용.
- **특징**:
  1. 재선언 불가.
  2. 재할당 가능.

---

### **`null` vs `undefined`**
- **`null`**: 값이 아예 **없음을 명시적으로 표현**.
- **`undefined`**: 값이 지정되지 않았으나, 메모리 상에 공간이 존재.

---

### **배열 (Array)**
- 여러 값을 순서대로 저장하는 데이터 구조.
- **특징**:
  - 배열은 0부터 시작하는 인덱스를 가짐.
  - 배열 메서드 활용 예:
    ```javascript
    const daysOfWeek = ["mon", "tues", "weds", "thur", "fri", "sat", "sun"];
    daysOfWeek.push("extraDay"); // 배열 끝에 값 추가
    console.log(daysOfWeek[1]); // 출력: "tues"
    ```

---

### **객체 (Object)**
- 키-값 형태로 데이터를 저장하는 구조.
- **선언 예제**:
    ```javascript
    const player = {
        name: "seongjin",
        points: 12,
        age: 24,
    };

    console.log(player.name); // "seongjin"
    player.lastName = "ahn"; // 객체에 새 속성 추가
    console.log(player.lastName); // "ahn"
    ```

---

### **함수 (Function)**
- **특징**:
  1. 데이터 처리와 재활용 가능.
  2. 함수 내부의 변수는 **블록 내에서만 유효**.
  3. `return`을 통해 외부와 소통 가능.

- **선언 예제**:
    ```javascript
    function sayHello(name, age, point) {
        return "hello my name is " + name + age + point;
    }

    console.log(sayHello("seongjae", 24, 12)); // 출력: "hello my name is seongjae2412"
    ```

---

### **객체 내 함수 활용**
- 객체 메서드를 통해 로직 간결화.
    ```javascript
    const calculator = {
        plus: function(a, b) {
            return a + b;
        },
        minus: function(a, b) {
            return a - b;
        },
        multiply: function(a, b) {
            return a * b;
        },
        divide: function(a, b) {
            return a / b;
        },
    };

    console.log(calculator.plus(2, 3)); // 5
    console.log(calculator.minus(5, 2)); // 3
    console.log(calculator.multiply(3, 3)); // 9
    console.log(calculator.divide(6, 2)); // 3
    ```

---

### **조건부 연산자 (Ternary Operator)**
- 조건에 따라 값을 반환하는 표현식.
- **문법**:
    ```javascript
    const result = condition ? value1 : value2;
    ```
    - `condition`: 조건문.
    - `value1`: 조건이 참일 경우 반환.
    - `value2`: 조건이 거짓일 경우 반환.

- **예제**:
    ```javascript
    const age = prompt("나이를 입력해 주세요", 18);
    let message = 
        age < 3 
            ? "너무 어립니다." 
            : age < 20
            ? "성인이 아닙니다." 
            : age >= 20
            ? "성인입니다." 
            : "나이를 제대로 적어주세요";

    alert(message);
    ```
